[2022-07-29 04:53:59,656]^;INFO^;225^;configuration.py^;get_training_pipeline_config()^;Training pipleine config: TrainingPipelineConfig(artifact_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact')
[2022-07-29 04:53:59,676]^;INFO^;114^;pipeline.py^;run_pipeline()^;Pipeline starting.
[2022-07-29 04:53:59,676]^;INFO^;13^;demo.py^;main()^;main function execution completed.
[2022-07-29 04:53:59,677]^;INFO^;130^;pipeline.py^;run_pipeline()^;Pipeline experiment: Experiment(experiment_id='d575f717-d2de-472c-951e-886e5acba941', initialization_timestamp='2022-07-29-04-53-54', artifact_time_stamp='2022-07-29-04-53-54', running_status=True, start_time=datetime.datetime(2022, 7, 29, 4, 53, 59, 677919), stop_time=None, execution_time=None, message='Pipeline has been started.', experiment_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\experiment\\experiment.csv', accuracy=None, is_model_accepted=None)
[2022-07-29 04:53:59,747]^;INFO^;64^;configuration.py^;get_data_ingestion_config()^;Data Ingestion config: DataIngestionConfig(dataset_download_url='https://raw.githubusercontent.com/codeofelango/ineuronproject_storesales/main/Train.csv', tgz_download_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-29-04-53-54\\tgz_data', raw_data_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-29-04-53-54\\raw_data', ingested_train_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-29-04-53-54\\ingested_data\\train', ingested_test_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-29-04-53-54\\ingested_data\\test')
[2022-07-29 04:53:59,748]^;INFO^;16^;data_ingestion.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-29 04:53:59,748]^;INFO^;126^;data_ingestion.py^;initiate_data_ingestion()^;Downloadingstarted from github location
[2022-07-29 04:53:59,751]^;INFO^;37^;data_ingestion.py^;download_housing_data()^;Downloading file from :[https://raw.githubusercontent.com/codeofelango/ineuronproject_storesales/main/Train.csv] into :[C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-29-04-53-54\tgz_data\Train.csv]
[2022-07-29 04:54:04,343]^;INFO^;39^;data_ingestion.py^;download_housing_data()^;File :[C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-29-04-53-54\tgz_data\Train.csv] has been downloaded successfully.
[2022-07-29 04:54:04,344]^;INFO^;128^;data_ingestion.py^;initiate_data_ingestion()^;Extracting started
[2022-07-29 04:54:04,347]^;INFO^;56^;data_ingestion.py^;extract_tgz_file()^;Extracting tgz file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-29-04-53-54\raw_data\Train.csv] into dir: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-29-04-53-54\raw_data]
[2022-07-29 04:54:06,906]^;INFO^;60^;data_ingestion.py^;extract_tgz_file()^;Extraction completed
[2022-07-29 04:54:06,906]^;INFO^;130^;data_ingestion.py^;initiate_data_ingestion()^;spliting from github location
[2022-07-29 04:54:06,907]^;INFO^;74^;data_ingestion.py^;split_data_as_train_test()^;Reading csv file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-29-04-53-54\raw_data\Train.csv]
[2022-07-29 04:54:07,263]^;INFO^;84^;data_ingestion.py^;split_data_as_train_test()^;Splitting data into train and test
[2022-07-29 04:54:07,266]^;INFO^;89^;data_ingestion.py^;split_data_as_train_test()^;start StratifiedShuffleSplit data into train and test
[2022-07-29 04:54:07,559]^;INFO^;94^;data_ingestion.py^;split_data_as_train_test()^;stop StratifiedShuffleSplit data into train and test in loop
[2022-07-29 04:54:07,563]^;INFO^;104^;data_ingestion.py^;split_data_as_train_test()^;Exporting training datset to file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-29-04-53-54\ingested_data\train\Train.csv]
[2022-07-29 04:54:07,785]^;INFO^;109^;data_ingestion.py^;split_data_as_train_test()^;Exporting test dataset to file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-29-04-53-54\ingested_data\test\Train.csv]
[2022-07-29 04:54:07,848]^;INFO^;118^;data_ingestion.py^;split_data_as_train_test()^;Data Ingestion artifact:[DataIngestionArtifact(train_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-29-04-53-54\\ingested_data\\train\\Train.csv', test_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-29-04-53-54\\ingested_data\\test\\Train.csv', is_ingested=True, message='Data ingestion completed successfully.')]
[2022-07-29 04:54:07,849]^;INFO^;138^;data_ingestion.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-29 04:54:07,852]^;INFO^;20^;data_validation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Valdaition log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-29 04:54:07,852]^;INFO^;38^;data_validation.py^;is_train_test_file_exists()^;Checking if training and test file is available
[2022-07-29 04:54:07,853]^;INFO^;50^;data_validation.py^;is_train_test_file_exists()^;Is train and test file exists?-> True
[2022-07-29 04:54:18,592]^;INFO^;139^;data_validation.py^;initiate_data_validation()^;Data validation artifact: DataValidationArtifact(schema_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\config\\schema.yaml', report_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_validation\\2022-07-29-04-53-54\\report.json', report_page_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_validation\\2022-07-29-04-53-54\\report.html', is_validated=True, message='Data Validation performed successully.')
[2022-07-29 04:54:18,597]^;INFO^;146^;data_validation.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Valdaition log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-29 04:54:18,599]^;INFO^;148^;configuration.py^;get_data_transformation_config()^;Data transformation config: DataTransformationConfig(add_bedroom_per_room=True, transformed_train_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-29-04-53-54\\transformed_data\\train', transformed_test_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-29-04-53-54\\transformed_data\\test', preprocessed_object_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-29-04-53-54\\preprocessed\\preprocessed.pkl')
[2022-07-29 04:54:18,607]^;INFO^;82^;data_transformation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-29 04:54:18,608]^;INFO^;148^;data_transformation.py^;initiate_data_transformation()^;Obtaining preprocessing object.
[2022-07-29 04:54:18,668]^;INFO^;121^;data_transformation.py^;get_data_transformer_object()^;Categorical columns: ['Item_Identifier', 'Item_Fat_Content', 'Item_Type', 'Outlet_Type']
[2022-07-29 04:54:18,669]^;INFO^;122^;data_transformation.py^;get_data_transformer_object()^;Numerical columns: ['Item_Weight', 'Item_Visibility', 'Item_MRP', 'Outlet_Establishment_Year']
[2022-07-29 04:54:18,670]^;INFO^;152^;data_transformation.py^;initiate_data_transformation()^;Obtaining training and test file path.
[2022-07-29 04:54:18,685]^;INFO^;170^;data_transformation.py^;initiate_data_transformation()^;Selected columns: dict_keys(['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier', 'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type', 'Item_Outlet_Sales'])
[2022-07-29 04:54:18,686]^;INFO^;172^;data_transformation.py^;initiate_data_transformation()^;Loading training and test data as pandas dataframe.
[2022-07-29 04:54:18,878]^;INFO^;183^;data_transformation.py^;initiate_data_transformation()^;Splitting input and target feature from training and testing dataframe.
[2022-07-29 04:54:19,370]^;INFO^;193^;data_transformation.py^;initiate_data_transformation()^;Applying preprocessing object on training dataframe and testing dataframe
[2022-07-29 04:54:31,839]^;INFO^;62^;data_transformation.py^;transform()^;Transforming data
[2022-07-29 04:54:32,634]^;INFO^;62^;data_transformation.py^;transform()^;Transforming data
[2022-07-29 04:54:33,518]^;INFO^;212^;data_transformation.py^;initiate_data_transformation()^;Saving transformed training and testing array.
[2022-07-29 04:54:34,179]^;INFO^;219^;data_transformation.py^;initiate_data_transformation()^;Saving preprocessing object.
[2022-07-29 04:54:34,331]^;INFO^;229^;data_transformation.py^;initiate_data_transformation()^;Data transformationa artifact: DataTransformationArtifact(is_transformed=True, message='Data transformation successfull.', transformed_train_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-29-04-53-54\\transformed_data\\train\\Train.npz', transformed_test_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-29-04-53-54\\transformed_data\\test\\Train.npz', preprocessed_object_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-29-04-53-54\\preprocessed\\preprocessed.pkl')
[2022-07-29 04:54:34,660]^;INFO^;235^;data_transformation.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-29 04:54:34,695]^;INFO^;179^;configuration.py^;get_model_trainer_config()^;Model trainer config: ModelTrainerConfig(trained_model_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\model_trainer\\2022-07-29-04-53-54\\trained_model\\model.pkl', base_accuracy=0.5, model_config_file_path='config\\model.yaml')
[2022-07-29 04:54:34,697]^;INFO^;46^;model_trainer.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-29 04:54:34,698]^;INFO^;54^;model_trainer.py^;initiate_model_trainer()^;Loading transformed training dataset
[2022-07-29 04:54:35,295]^;INFO^;58^;model_trainer.py^;initiate_model_trainer()^;Loading transformed testing dataset
[2022-07-29 04:54:35,336]^;INFO^;62^;model_trainer.py^;initiate_model_trainer()^;Splitting training and testing input and target feature
[2022-07-29 04:54:35,337]^;INFO^;66^;model_trainer.py^;initiate_model_trainer()^;Extracting model config file path
[2022-07-29 04:54:35,338]^;INFO^;69^;model_trainer.py^;initiate_model_trainer()^;Initializing model factory class using above model config file: config\model.yaml
[2022-07-29 04:54:35,375]^;INFO^;74^;model_trainer.py^;initiate_model_trainer()^;Expected accuracy: 0.5
[2022-07-29 04:54:35,375]^;INFO^;76^;model_trainer.py^;initiate_model_trainer()^;Initiating operation model selecttion
[2022-07-29 04:54:35,375]^;INFO^;365^;model_factory.py^;get_best_model()^;Started Initializing model from config file
[2022-07-29 04:54:35,378]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.linear_model' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\linear_model\\__init__.py'> import LinearRegression
[2022-07-29 04:54:35,406]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ LinearRegression().fit_intercept=True
[2022-07-29 04:54:35,407]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.ensemble' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\ensemble\\__init__.py'> import RandomForestRegressor
[2022-07-29 04:54:35,414]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ RandomForestRegressor().min_samples_leaf=3
[2022-07-29 04:54:35,417]^;INFO^;367^;model_factory.py^;get_best_model()^;Initialized model: [InitializedModelDetail(model_serial_number='module_0', model=LinearRegression(), param_grid_search={'fit_intercept': [True, False]}, model_name='sklearn.linear_model.LinearRegression'), InitializedModelDetail(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), param_grid_search={'min_samples_leaf': [6]}, model_name='sklearn.ensemble.RandomForestRegressor')]
[2022-07-29 04:54:35,418]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
[2022-07-29 04:54:35,424]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).cv=5
[2022-07-29 04:54:35,427]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).verbose=2
[2022-07-29 04:54:35,427]^;INFO^;233^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training LinearRegression Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 04:57:27,695]^;INFO^;243^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training LinearRegression Finished" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 04:57:27,746]^;INFO^;244^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best model: >>>>>>>>>>>>>>>>>>>>
[2022-07-29 04:57:27,747]^;INFO^;245^;model_factory.py^;execute_grid_search_operation()^;LinearRegression()
[2022-07-29 04:57:27,784]^;INFO^;246^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Score: >>>>>>>>>>>>>>>>>>>>
[2022-07-29 04:57:27,786]^;INFO^;247^;model_factory.py^;execute_grid_search_operation()^;-4.412972218033531e+27
[2022-07-29 04:57:27,786]^;INFO^;248^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Params: >>>>>>>>>>>>>>>>>>>>
[2022-07-29 04:57:27,787]^;INFO^;249^;model_factory.py^;execute_grid_search_operation()^;{'fit_intercept': True}
[2022-07-29 04:57:27,797]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
[2022-07-29 04:57:27,823]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).cv=5
[2022-07-29 04:57:27,827]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).verbose=2
[2022-07-29 04:57:27,829]^;INFO^;233^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:53,715]^;INFO^;243^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Finished" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:53,734]^;INFO^;244^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best model: >>>>>>>>>>>>>>>>>>>>
[2022-07-29 05:06:53,734]^;INFO^;245^;model_factory.py^;execute_grid_search_operation()^;RandomForestRegressor(min_samples_leaf=6)
[2022-07-29 05:06:53,741]^;INFO^;246^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Score: >>>>>>>>>>>>>>>>>>>>
[2022-07-29 05:06:53,742]^;INFO^;247^;model_factory.py^;execute_grid_search_operation()^;0.5808414499245073
[2022-07-29 05:06:53,743]^;INFO^;248^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Params: >>>>>>>>>>>>>>>>>>>>
[2022-07-29 05:06:53,743]^;INFO^;249^;model_factory.py^;execute_grid_search_operation()^;{'min_samples_leaf': 6}
[2022-07-29 05:06:53,760]^;INFO^;351^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Acceptable model found:GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.5808414499245073)
[2022-07-29 05:06:53,765]^;INFO^;358^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Best model: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.5808414499245073)
[2022-07-29 05:06:53,768]^;INFO^;79^;model_trainer.py^;initiate_model_trainer()^;Best model found on training dataset: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.5808414499245073)
[2022-07-29 05:06:53,768]^;INFO^;81^;model_trainer.py^;initiate_model_trainer()^;Extracting trained model list.
[2022-07-29 05:06:53,768]^;INFO^;85^;model_trainer.py^;initiate_model_trainer()^;Evaluation all trained model on training and testing dataset both
[2022-07-29 05:06:53,769]^;INFO^;71^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [LinearRegression] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:53,951]^;INFO^;90^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:53,952]^;INFO^;91^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2022-07-29 05:06:53,954]^;INFO^;92^;model_factory.py^;evaluate_regression_model()^;0.6444605774064974		 -1.3992873303176527e+25		1.2889211548129949
[2022-07-29 05:06:53,954]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:53,954]^;INFO^;95^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [1.3992873303176527e+25].
[2022-07-29 05:06:53,954]^;INFO^;96^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [1011.8813494671556].
[2022-07-29 05:06:53,954]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [6512158021012249.0].
[2022-07-29 05:06:53,955]^;INFO^;71^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [RandomForestRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:54,529]^;INFO^;90^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:54,529]^;INFO^;91^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2022-07-29 05:06:54,529]^;INFO^;92^;model_factory.py^;evaluate_regression_model()^;0.7615093997335739		 0.5767789996451437		0.6563945858046857
[2022-07-29 05:06:54,529]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-29 05:06:54,529]^;INFO^;95^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [0.18473040008843022].
[2022-07-29 05:06:54,529]^;INFO^;96^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [828.7458052647268].
[2022-07-29 05:06:54,530]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [1132.5440014121525].
[2022-07-29 05:06:54,530]^;INFO^;115^;model_factory.py^;evaluate_regression_model()^;No model found with higher accuracy than base accuracy
[2022-07-29 05:06:54,530]^;INFO^;88^;model_trainer.py^;initiate_model_trainer()^;Best found model on both training and testing dataset.
[2022-07-29 05:06:55,034]^;INFO^;116^;model_trainer.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
