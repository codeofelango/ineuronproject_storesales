[2022-07-26 05:32:10,951]^;INFO^;225^;configuration.py^;get_training_pipeline_config()^;Training pipleine config: TrainingPipelineConfig(artifact_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact')
[2022-07-26 05:32:10,956]^;INFO^;114^;pipeline.py^;run_pipeline()^;Pipeline starting.
[2022-07-26 05:32:10,956]^;INFO^;13^;demo.py^;main()^;main function execution completed.
[2022-07-26 05:32:10,956]^;INFO^;130^;pipeline.py^;run_pipeline()^;Pipeline experiment: Experiment(experiment_id='81b7e3d8-fc40-4cdb-841d-baf88d3f39ac', initialization_timestamp='2022-07-26-05-32-05', artifact_time_stamp='2022-07-26-05-32-05', running_status=True, start_time=datetime.datetime(2022, 7, 26, 5, 32, 10, 956625), stop_time=None, execution_time=None, message='Pipeline has been started.', experiment_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\experiment\\experiment.csv', accuracy=None, is_model_accepted=None)
[2022-07-26 05:32:10,983]^;INFO^;64^;configuration.py^;get_data_ingestion_config()^;Data Ingestion config: DataIngestionConfig(dataset_download_url='https://raw.githubusercontent.com/codeofelango/ineuronproject_storesales/main/Train.csv', tgz_download_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-26-05-32-05\\tgz_data', raw_data_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-26-05-32-05\\raw_data', ingested_train_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-26-05-32-05\\ingested_data\\train', ingested_test_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-26-05-32-05\\ingested_data\\test')
[2022-07-26 05:32:10,983]^;INFO^;16^;data_ingestion.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-26 05:32:10,983]^;INFO^;126^;data_ingestion.py^;initiate_data_ingestion()^;Downloadingstarted from github location
[2022-07-26 05:32:10,985]^;INFO^;37^;data_ingestion.py^;download_housing_data()^;Downloading file from :[https://raw.githubusercontent.com/codeofelango/ineuronproject_storesales/main/Train.csv] into :[C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-26-05-32-05\tgz_data\Train.csv]
[2022-07-26 05:32:12,585]^;INFO^;39^;data_ingestion.py^;download_housing_data()^;File :[C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-26-05-32-05\tgz_data\Train.csv] has been downloaded successfully.
[2022-07-26 05:32:12,586]^;INFO^;128^;data_ingestion.py^;initiate_data_ingestion()^;Extracting started
[2022-07-26 05:32:12,587]^;INFO^;56^;data_ingestion.py^;extract_tgz_file()^;Extracting tgz file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-26-05-32-05\raw_data\Train.csv] into dir: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-26-05-32-05\raw_data]
[2022-07-26 05:32:13,632]^;INFO^;60^;data_ingestion.py^;extract_tgz_file()^;Extraction completed
[2022-07-26 05:32:13,632]^;INFO^;130^;data_ingestion.py^;initiate_data_ingestion()^;spliting from github location
[2022-07-26 05:32:13,633]^;INFO^;74^;data_ingestion.py^;split_data_as_train_test()^;Reading csv file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-26-05-32-05\raw_data\Train.csv]
[2022-07-26 05:32:13,859]^;INFO^;84^;data_ingestion.py^;split_data_as_train_test()^;Splitting data into train and test
[2022-07-26 05:32:13,860]^;INFO^;89^;data_ingestion.py^;split_data_as_train_test()^;start StratifiedShuffleSplit data into train and test
[2022-07-26 05:32:14,027]^;INFO^;94^;data_ingestion.py^;split_data_as_train_test()^;stop StratifiedShuffleSplit data into train and test in loop
[2022-07-26 05:32:14,029]^;INFO^;104^;data_ingestion.py^;split_data_as_train_test()^;Exporting training datset to file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-26-05-32-05\ingested_data\train\Train.csv]
[2022-07-26 05:32:14,330]^;INFO^;109^;data_ingestion.py^;split_data_as_train_test()^;Exporting test dataset to file: [C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\data_ingestion\2022-07-26-05-32-05\ingested_data\test\Train.csv]
[2022-07-26 05:32:14,411]^;INFO^;118^;data_ingestion.py^;split_data_as_train_test()^;Data Ingestion artifact:[DataIngestionArtifact(train_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-26-05-32-05\\ingested_data\\train\\Train.csv', test_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_ingestion\\2022-07-26-05-32-05\\ingested_data\\test\\Train.csv', is_ingested=True, message='Data ingestion completed successfully.')]
[2022-07-26 05:32:14,414]^;INFO^;138^;data_ingestion.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-26 05:32:14,417]^;INFO^;20^;data_validation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Valdaition log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-26 05:32:14,417]^;INFO^;38^;data_validation.py^;is_train_test_file_exists()^;Checking if training and test file is available
[2022-07-26 05:32:14,418]^;INFO^;50^;data_validation.py^;is_train_test_file_exists()^;Is train and test file exists?-> True
[2022-07-26 05:32:20,676]^;INFO^;139^;data_validation.py^;initiate_data_validation()^;Data validation artifact: DataValidationArtifact(schema_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\config\\schema.yaml', report_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_validation\\2022-07-26-05-32-05\\report.json', report_page_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_validation\\2022-07-26-05-32-05\\report.html', is_validated=True, message='Data Validation performed successully.')
[2022-07-26 05:32:20,676]^;INFO^;146^;data_validation.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Valdaition log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-26 05:32:20,677]^;INFO^;148^;configuration.py^;get_data_transformation_config()^;Data transformation config: DataTransformationConfig(add_bedroom_per_room=True, transformed_train_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-26-05-32-05\\transformed_data\\train', transformed_test_dir='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-26-05-32-05\\transformed_data\\test', preprocessed_object_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-26-05-32-05\\preprocessed\\preprocessed.pkl')
[2022-07-26 05:32:20,677]^;INFO^;82^;data_transformation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-26 05:32:20,677]^;INFO^;153^;data_transformation.py^;initiate_data_transformation()^;Obtaining preprocessing object.
[2022-07-26 05:32:20,686]^;INFO^;125^;data_transformation.py^;get_data_transformer_object()^;Categorical columns: ['Item_Identifier', 'Item_Fat_Content', 'Item_Type', 'Outlet_Type']
[2022-07-26 05:32:20,687]^;INFO^;126^;data_transformation.py^;get_data_transformer_object()^;Numerical columns: ['Item_Weight', 'Item_Visibility', 'Item_MRP', 'Outlet_Establishment_Year']
[2022-07-26 05:32:20,687]^;INFO^;157^;data_transformation.py^;initiate_data_transformation()^;Obtaining training and test file path.
[2022-07-26 05:32:20,694]^;INFO^;175^;data_transformation.py^;initiate_data_transformation()^;Selected columns: dict_keys(['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier', 'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type', 'Item_Outlet_Sales'])
[2022-07-26 05:32:20,694]^;INFO^;177^;data_transformation.py^;initiate_data_transformation()^;Loading training and test data as pandas dataframe.
[2022-07-26 05:32:20,776]^;INFO^;185^;data_transformation.py^;initiate_data_transformation()^;Splitting input and target feature from training and testing dataframe.
[2022-07-26 05:32:20,783]^;INFO^;193^;data_transformation.py^;initiate_data_transformation()^;Applying preprocessing object on training dataframe and testing dataframe
[2022-07-26 05:32:46,950]^;INFO^;62^;data_transformation.py^;transform()^;Transforming data
[2022-07-26 05:32:47,491]^;INFO^;62^;data_transformation.py^;transform()^;Transforming data
[2022-07-26 05:32:47,561]^;INFO^;211^;data_transformation.py^;initiate_data_transformation()^;Saving transformed training and testing array.
[2022-07-26 05:32:47,610]^;INFO^;218^;data_transformation.py^;initiate_data_transformation()^;Saving preprocessing object.
[2022-07-26 05:32:47,690]^;INFO^;228^;data_transformation.py^;initiate_data_transformation()^;Data transformationa artifact: DataTransformationArtifact(is_transformed=True, message='Data transformation successfull.', transformed_train_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-26-05-32-05\\transformed_data\\train\\Train.npz', transformed_test_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-26-05-32-05\\transformed_data\\test\\Train.npz', preprocessed_object_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\data_transformation\\2022-07-26-05-32-05\\preprocessed\\preprocessed.pkl')
[2022-07-26 05:32:47,720]^;INFO^;234^;data_transformation.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


[2022-07-26 05:32:47,734]^;INFO^;179^;configuration.py^;get_model_trainer_config()^;Model trainer config: ModelTrainerConfig(trained_model_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\model_trainer\\2022-07-26-05-32-05\\trained_model\\model.pkl', base_accuracy=0.5, model_config_file_path='config\\model.yaml')
[2022-07-26 05:32:47,736]^;INFO^;46^;model_trainer.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-26 05:32:47,737]^;INFO^;54^;model_trainer.py^;initiate_model_trainer()^;Loading transformed training dataset
[2022-07-26 05:32:48,636]^;INFO^;58^;model_trainer.py^;initiate_model_trainer()^;Loading transformed testing dataset
[2022-07-26 05:32:48,795]^;INFO^;62^;model_trainer.py^;initiate_model_trainer()^;Splitting training and testing input and target feature
[2022-07-26 05:32:48,796]^;INFO^;66^;model_trainer.py^;initiate_model_trainer()^;Extracting model config file path
[2022-07-26 05:32:48,796]^;INFO^;69^;model_trainer.py^;initiate_model_trainer()^;Initializing model factory class using above model config file: config\model.yaml
[2022-07-26 05:32:48,818]^;INFO^;74^;model_trainer.py^;initiate_model_trainer()^;Expected accuracy: 0.5
[2022-07-26 05:32:48,818]^;INFO^;76^;model_trainer.py^;initiate_model_trainer()^;Initiating operation model selecttion
[2022-07-26 05:32:48,818]^;INFO^;365^;model_factory.py^;get_best_model()^;Started Initializing model from config file
[2022-07-26 05:32:48,820]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.linear_model' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\linear_model\\__init__.py'> import LinearRegression
[2022-07-26 05:32:48,903]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ LinearRegression().fit_intercept=True
[2022-07-26 05:32:48,904]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.ensemble' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\ensemble\\__init__.py'> import RandomForestRegressor
[2022-07-26 05:32:48,912]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ RandomForestRegressor().min_samples_leaf=3
[2022-07-26 05:32:48,915]^;INFO^;367^;model_factory.py^;get_best_model()^;Initialized model: [InitializedModelDetail(model_serial_number='module_0', model=LinearRegression(), param_grid_search={'fit_intercept': [True, False]}, model_name='sklearn.linear_model.LinearRegression'), InitializedModelDetail(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), param_grid_search={'min_samples_leaf': [6]}, model_name='sklearn.ensemble.RandomForestRegressor')]
[2022-07-26 05:32:48,917]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
[2022-07-26 05:32:48,925]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).cv=5
[2022-07-26 05:32:48,967]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).verbose=2
[2022-07-26 05:32:48,968]^;INFO^;233^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training LinearRegression Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:32:49,791]^;INFO^;243^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training LinearRegression Finished" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:32:49,792]^;INFO^;244^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best model: >>>>>>>>>>>>>>>>>>>>
[2022-07-26 05:32:49,792]^;INFO^;245^;model_factory.py^;execute_grid_search_operation()^;LinearRegression(fit_intercept=False)
[2022-07-26 05:32:49,793]^;INFO^;246^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Score: >>>>>>>>>>>>>>>>>>>>
[2022-07-26 05:32:49,793]^;INFO^;247^;model_factory.py^;execute_grid_search_operation()^;0.5625601990931074
[2022-07-26 05:32:49,795]^;INFO^;248^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Params: >>>>>>>>>>>>>>>>>>>>
[2022-07-26 05:32:49,796]^;INFO^;249^;model_factory.py^;execute_grid_search_operation()^;{'fit_intercept': False}
[2022-07-26 05:32:49,796]^;INFO^;202^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from 'C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
[2022-07-26 05:32:49,800]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).cv=5
[2022-07-26 05:32:49,803]^;INFO^;181^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=RandomForestRegressor(min_samples_leaf=3),
             param_grid={'min_samples_leaf': [6]}).verbose=2
[2022-07-26 05:32:49,803]^;INFO^;233^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:34,246]^;INFO^;243^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training RandomForestRegressor Finished" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:34,272]^;INFO^;244^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best model: >>>>>>>>>>>>>>>>>>>>
[2022-07-26 05:33:34,272]^;INFO^;245^;model_factory.py^;execute_grid_search_operation()^;RandomForestRegressor(min_samples_leaf=6)
[2022-07-26 05:33:34,290]^;INFO^;246^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Score: >>>>>>>>>>>>>>>>>>>>
[2022-07-26 05:33:34,290]^;INFO^;247^;model_factory.py^;execute_grid_search_operation()^;0.5805029346214281
[2022-07-26 05:33:34,292]^;INFO^;248^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>> Best Params: >>>>>>>>>>>>>>>>>>>>
[2022-07-26 05:33:34,293]^;INFO^;249^;model_factory.py^;execute_grid_search_operation()^;{'min_samples_leaf': 6}
[2022-07-26 05:33:34,363]^;INFO^;351^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Acceptable model found:GridSearchedBestModel(model_serial_number='module_0', model=LinearRegression(), best_model=LinearRegression(fit_intercept=False), best_parameters={'fit_intercept': False}, best_score=0.5625601990931074)
[2022-07-26 05:33:34,371]^;INFO^;351^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Acceptable model found:GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.5805029346214281)
[2022-07-26 05:33:34,396]^;INFO^;358^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Best model: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.5805029346214281)
[2022-07-26 05:33:34,400]^;INFO^;79^;model_trainer.py^;initiate_model_trainer()^;Best model found on training dataset: GridSearchedBestModel(model_serial_number='module_1', model=RandomForestRegressor(min_samples_leaf=3), best_model=RandomForestRegressor(min_samples_leaf=6), best_parameters={'min_samples_leaf': 6}, best_score=0.5805029346214281)
[2022-07-26 05:33:34,401]^;INFO^;81^;model_trainer.py^;initiate_model_trainer()^;Extracting trained model list.
[2022-07-26 05:33:34,402]^;INFO^;85^;model_trainer.py^;initiate_model_trainer()^;Evaluation all trained model on training and testing dataset both
[2022-07-26 05:33:34,404]^;INFO^;71^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [LinearRegression] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:34,486]^;INFO^;90^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:34,486]^;INFO^;91^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2022-07-26 05:33:34,490]^;INFO^;92^;model_factory.py^;evaluate_regression_model()^;0.5656786530686349		 0.5473671873419179		0.5563722930860299
[2022-07-26 05:33:34,490]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:34,491]^;INFO^;95^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [0.018311465726716936].
[2022-07-26 05:33:34,491]^;INFO^;96^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [1118.3849073706624].
[2022-07-26 05:33:34,491]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [1171.2362258410376].
[2022-07-26 05:33:34,493]^;INFO^;112^;model_factory.py^;evaluate_regression_model()^;Acceptable model found MetricInfoArtifact(model_name='LinearRegression(fit_intercept=False)', model_object=LinearRegression(fit_intercept=False), train_rmse=1118.3849073706624, test_rmse=1171.2362258410376, train_accuracy=0.5656786530686349, test_accuracy=0.5473671873419179, model_accuracy=0.5563722930860299, index_number=0). 
[2022-07-26 05:33:34,494]^;INFO^;71^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [RandomForestRegressor] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:35,373]^;INFO^;90^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:35,374]^;INFO^;91^;model_factory.py^;evaluate_regression_model()^;Train Score		 Test Score		 Average Score
[2022-07-26 05:33:35,375]^;INFO^;92^;model_factory.py^;evaluate_regression_model()^;0.7608342529563583		 0.5727173235326954		0.6535074678586907
[2022-07-26 05:33:35,379]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:35,380]^;INFO^;95^;model_factory.py^;evaluate_regression_model()^;Diff test train accuracy: [0.18811692942366287].
[2022-07-26 05:33:35,381]^;INFO^;96^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [829.9180309759006].
[2022-07-26 05:33:35,383]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error: [1137.9655694309952].
[2022-07-26 05:33:35,384]^;INFO^;88^;model_trainer.py^;initiate_model_trainer()^;Best found model on both training and testing dataset.
[2022-07-26 05:33:36,089]^;INFO^;96^;model_trainer.py^;initiate_model_trainer()^;Saving model at path: C:\fullstackdatascience\ineuron project\ML_StoreSales\mlstoresales\artifact\model_trainer\2022-07-26-05-32-05\trained_model\model.pkl
[2022-07-26 05:33:36,275]^;INFO^;110^;model_trainer.py^;initiate_model_trainer()^;Model Trainer Artifact: ModelTrainerArtifact(is_trained=True, message='Model Trained successfully', trained_model_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\model_trainer\\2022-07-26-05-32-05\\trained_model\\model.pkl', train_rmse=1118.3849073706624, test_rmse=1171.2362258410376, train_accuracy=0.5656786530686349, test_accuracy=0.5473671873419179, model_accuracy=0.5563722930860299)
[2022-07-26 05:33:36,287]^;INFO^;116^;model_trainer.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-26 05:33:36,312]^;INFO^;196^;configuration.py^;get_model_evaluation_config()^;Model Evaluation Config: ModelEvaluationConfig(model_evaluation_file_path='C:\\fullstackdatascience\\ineuron project\\ML_StoreSales\\mlstoresales\\artifact\\model_evaluation\\model_evaluation.yaml', time_stamp='2022-07-26-05-32-05').
[2022-07-26 05:33:36,313]^;INFO^;24^;model_evaluation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Evaluation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2022-07-26 05:33:36,693]^;INFO^;106^;model_evaluation.py^;initiate_model_evaluation()^;Converting target column into numpy array.
[2022-07-26 05:33:36,700]^;INFO^;109^;model_evaluation.py^;initiate_model_evaluation()^;Conversion completed target column into numpy array.
[2022-07-26 05:33:36,701]^;INFO^;112^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target column from the dataframe.
[2022-07-26 05:33:36,718]^;INFO^;115^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target column from the dataframe completed.
[2022-07-26 05:33:36,726]^;INFO^;71^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [HousingEstimatorModel] <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2022-07-26 05:33:37,127]^;INFO^;160^;model_evaluation.py^;__del__()^;====================Model Evaluation log completed.==================== 
